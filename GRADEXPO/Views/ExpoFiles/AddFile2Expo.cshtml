@using GRADEXPO.ViewModels;
@model ExposFilesViewModel
@{
    ViewBag.Title = Model.Title;
}
<script>
    $.validator.unobtrusive.adapters.add('filetype', ['validtypes'], function (options) {
        options.rules['filetype'] = { validtypes: options.params.validtypes.split(',') };
        options.messages['filetype'] = options.message;
    });

    $.validator.addMethod("filetype", function (value, element, param) {
        if (!value) {
            return true;
        }
        var extension = getFileExtension(value);
        return $.inArray(extension, param.validtypes) !== -1;
    });

    function getFileExtension(fileName) {
        if (/[.]/.exec(fileName)) {
            return /[^.]+$/.exec(fileName)[0].toLowerCase();
        }
        return null;
    }
</script>
<h2>@Model.Title</h2>

<div class="row">
    <div class="col-md-8">
        <section id="loginForm">
            @using (Html.BeginForm("addFile", "ExpoFiles", new { RedirectUrl = Model.RedirectUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
            {
                @Html.HiddenFor(m => m.expoId)
                <div class="form-group">
                    @Html.LabelFor(m => m.file, new { @class = "col-md-2 control-label" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(m => m.file, "", new { @class = "form-control", type = "file" })
                        @Html.ValidationMessageFor(m => m.file, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Model.AddButtonTitle" class="btn btn-default" />
                    </div>
                </div>
            }
        </section>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
