
@using GRADEXPO.ViewModels
@model ExposViewModel
@{
    //  ViewBag.Title = "Информация о пользователе"; //-71153, 07.08.2018
    ViewBag.Title = "Информация о выставке";//+71153, 07.08.2018
}
<script>
    var input = document.querySelectorAll('.input'),
        buffer = [];
    for (var i = 0; input.length > i; i++) {
        console.log(input[i].value);
        buffer[i] = document.createElement('div');
        buffer[i].className = "buffer";
        //вставляем скрытый div.buffer
        input[i].parentNode.insertBefore(buffer[i], input[i].nextSibling);

        input[i].oninput = function () {
            this.nextElementSibling.innerHTML = this.value;
            this.style.width = this.nextElementSibling.clientWidth + 'px';
        };
    }
</script>
<br />
<div id="accordion">
    <h3>Детали</h3>
    <div>
        <div class="form-group">
            <fieldset>
                @Html.LabelFor(m => m.ExpoName, new { @class = "col-md-2 control-label" })
                <input class="form-control" id="readOnlyInput" type="text" placeholder=" @Model.ExpoName" readonly="">
            </fieldset>
        </div>

        <div class="form-group">
            <fieldset>
                @Html.LabelFor(m => m.DateStart, new { @class = "col-md-2 control-label" })
                <input class="form-control" id="readOnlyInput" type="text" placeholder=" @Model.DateStart" readonly="">
            </fieldset>
        </div>

        <div class="form-group">
            <fieldset>
                @Html.LabelFor(m => m.DateEnd, new { @class = "col-md-2 control-label" })
                <input class="form-control" id="readOnlyInput" type="text" placeholder=" @Model.DateEnd" readonly="">
            </fieldset>
        </div>
        <div class="form-group">
            <fieldset>
                @Html.ActionLink("Изменить", "EditExpo", new { id = Model.Id }, new { @class = "btn btn-info btn-lg" })
            </fieldset>
        </div>
    </div>
    <h3>Стенды</h3>
    <div>
        @{Html.RenderAction("InfoAboutStandsInExpo", "Stands", new { stands = @Model.Stands });}
        @Html.ActionLink("Создать", "AddStand", "Stands", new { expoId = Model.Id }, new { @class = "btn btn-info btn-lg" })
        @Html.ActionLink("Импортировать из csv", "impStand", "Stands", new {  expoId = Model.Id }, new { @class = "btn btn-info btn-lg" })
    </div>
    <h3>Расписания</h3>
    <div>
        @{Html.RenderAction("VisitByExpo", "PlanVisit", new { visits = @Model.Visit, planVisit = @Model.PlanVisits });}
    </div>
    <h3>Место</h3>
    <div>
        <p>tesdfsdfsddsfsdfsdfsdfsdfsdfsdfsdf</p>
    </div>
    <h3>Фото</h3>
    <div>
        <p>tesdfsdfsddsfsdfsdfsdfsdfsdfsdfsdf</p>
    </div>
    <h3>Файлы</h3>
    <div>
        <p>tesdfsdfsddsfsdfsdfsdfsdfsdfsdfsdf</p>
    </div>
</div>



